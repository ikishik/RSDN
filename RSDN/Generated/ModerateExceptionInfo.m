/*
	ModerateExceptionInfo.h
	The implementation of properties and methods for the ModerateExceptionInfo object.
	Generated by SudzC.com
*/
#import "ModerateExceptionInfo.h"

@implementation ModerateExceptionInfo
	@synthesize ExceptionMessage = _ExceptionMessage;
	@synthesize LocalModerateId = _LocalModerateId;
	@synthesize Info = _Info;

	- (id) init
	{
		if(self = [super init])
		{
			self.ExceptionMessage = nil;
			self.Info = nil;

		}
		return self;
	}

	+ (ModerateExceptionInfo*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (ModerateExceptionInfo*)[[ModerateExceptionInfo alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.ExceptionMessage = [Soap getNodeValue: node withName: @"ExceptionMessage"];
			self.LocalModerateId = [[Soap getNodeValue: node withName: @"LocalModerateId"] intValue];
			self.Info = [Soap getNodeValue: node withName: @"Info"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"ModerateExceptionInfo"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.ExceptionMessage != nil) [s appendFormat: @"<ExceptionMessage>%@</ExceptionMessage>", [[self.ExceptionMessage stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<LocalModerateId>%@</LocalModerateId>", [NSString stringWithFormat: @"%i", self.LocalModerateId]];
		if (self.Info != nil) [s appendFormat: @"<Info>%@</Info>", [[self.Info stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[ModerateExceptionInfo class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
