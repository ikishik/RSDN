/*
	JanusMessageInfo.h
	The implementation of properties and methods for the JanusMessageInfo object.
	Generated by SudzC.com
*/
#import "JanusMessageInfo.h"

@implementation JanusMessageInfo
	@synthesize messageId = _messageId;
	@synthesize topicId = _topicId;
	@synthesize parentId = _parentId;
	@synthesize userId = _userId;
	@synthesize forumId = _forumId;
	@synthesize subject = _subject;
	@synthesize messageName = _messageName;
	@synthesize userNick = _userNick;
	@synthesize message = _message;
	@synthesize articleId = _articleId;
	@synthesize messageDate = _messageDate;
	@synthesize updateDate = _updateDate;
	@synthesize userRole = _userRole;
	@synthesize userTitle = _userTitle;
	@synthesize userTitleColor = _userTitleColor;
	@synthesize lastModerated = _lastModerated;
	@synthesize closed = _closed;

	- (id) init
	{
		if(self = [super init])
		{
			self.subject = nil;
			self.messageName = nil;
			self.userNick = nil;
			self.message = nil;
			self.messageDate = nil;
			self.updateDate = nil;
			self.userRole = nil;
			self.userTitle = nil;
			self.lastModerated = nil;

		}
		return self;
	}

	+ (JanusMessageInfo*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (JanusMessageInfo*)[[JanusMessageInfo alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.messageId = [[Soap getNodeValue: node withName: @"messageId"] intValue];
			self.topicId = [[Soap getNodeValue: node withName: @"topicId"] intValue];
			self.parentId = [[Soap getNodeValue: node withName: @"parentId"] intValue];
			self.userId = [[Soap getNodeValue: node withName: @"userId"] intValue];
			self.forumId = [[Soap getNodeValue: node withName: @"forumId"] intValue];
			self.subject = [Soap getNodeValue: node withName: @"subject"];
			self.messageName = [Soap getNodeValue: node withName: @"messageName"];
			self.userNick = [Soap getNodeValue: node withName: @"userNick"];
			self.message = [Soap getNodeValue: node withName: @"message"];
			self.articleId = [[Soap getNodeValue: node withName: @"articleId"] intValue];
			self.messageDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"messageDate"]];
			self.updateDate = [Soap dateFromString: [Soap getNodeValue: node withName: @"updateDate"]];
			self.userRole = [Soap getNodeValue: node withName: @"userRole"];
			self.userTitle = [Soap getNodeValue: node withName: @"userTitle"];
			self.userTitleColor = [[Soap getNodeValue: node withName: @"userTitleColor"] intValue];
			self.lastModerated = [Soap dateFromString: [Soap getNodeValue: node withName: @"lastModerated"]];
			self.closed = [[Soap getNodeValue: node withName: @"closed"] boolValue];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"JanusMessageInfo"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		[s appendFormat: @"<messageId>%@</messageId>", [NSString stringWithFormat: @"%i", self.messageId]];
		[s appendFormat: @"<topicId>%@</topicId>", [NSString stringWithFormat: @"%i", self.topicId]];
		[s appendFormat: @"<parentId>%@</parentId>", [NSString stringWithFormat: @"%i", self.parentId]];
		[s appendFormat: @"<userId>%@</userId>", [NSString stringWithFormat: @"%i", self.userId]];
		[s appendFormat: @"<forumId>%@</forumId>", [NSString stringWithFormat: @"%i", self.forumId]];
		if (self.subject != nil) [s appendFormat: @"<subject>%@</subject>", [[self.subject stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.messageName != nil) [s appendFormat: @"<messageName>%@</messageName>", [[self.messageName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.userNick != nil) [s appendFormat: @"<userNick>%@</userNick>", [[self.userNick stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.message != nil) [s appendFormat: @"<message>%@</message>", [[self.message stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<articleId>%@</articleId>", [NSString stringWithFormat: @"%i", self.articleId]];
		if (self.messageDate != nil) [s appendFormat: @"<messageDate>%@</messageDate>", [Soap getDateString: self.messageDate]];
		if (self.updateDate != nil) [s appendFormat: @"<updateDate>%@</updateDate>", [Soap getDateString: self.updateDate]];
		if (self.userRole != nil) [s appendFormat: @"<userRole>%@</userRole>", [[self.userRole stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.userTitle != nil) [s appendFormat: @"<userTitle>%@</userTitle>", [[self.userTitle stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<userTitleColor>%@</userTitleColor>", [NSString stringWithFormat: @"%i", self.userTitleColor]];
		if (self.lastModerated != nil) [s appendFormat: @"<lastModerated>%@</lastModerated>", [Soap getDateString: self.lastModerated]];
		[s appendFormat: @"<closed>%@</closed>", (self.closed)?@"true":@"false"];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[JanusMessageInfo class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
