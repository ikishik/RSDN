/*
	ViolationRequest.h
	The implementation of properties and methods for the ViolationRequest object.
	Generated by SudzC.com
*/
#import "ViolationRequest.h"

#import "ArrayOfRequestForumInfo.h"
@implementation ViolationRequest
	@synthesize UserName = _UserName;
	@synthesize Password = _Password;
	@synthesize SubscribedForums = _SubscribedForums;
	@synthesize LastRowVersion = _LastRowVersion;

	- (id) init
	{
		if(self = [super init])
		{
			self.UserName = nil;
			self.Password = nil;
			self.SubscribedForums = [[NSMutableArray alloc] init];
			self.LastRowVersion = nil;

		}
		return self;
	}

	+ (ViolationRequest*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (ViolationRequest*)[[ViolationRequest alloc] initWithNode: node];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.UserName = [Soap getNodeValue: node withName: @"UserName"];
			self.Password = [Soap getNodeValue: node withName: @"Password"];
			self.SubscribedForums = [[ArrayOfRequestForumInfo newWithNode: [Soap getNode: node withName: @"SubscribedForums"]] object];
			self.LastRowVersion = [Soap dataFromString: [Soap getNodeValue: node withName: @"LastRowVersion"]];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"ViolationRequest"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.UserName != nil) [s appendFormat: @"<UserName>%@</UserName>", [[self.UserName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.Password != nil) [s appendFormat: @"<Password>%@</Password>", [[self.Password stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.SubscribedForums != nil && self.SubscribedForums.count > 0) {
			[s appendFormat: @"<SubscribedForums>%@</SubscribedForums>", [ArrayOfRequestForumInfo serialize: self.SubscribedForums]];
		} else {
			[s appendString: @"<SubscribedForums/>"];
		}
		if (self.LastRowVersion != nil) [s appendFormat: @"<LastRowVersion>%@</LastRowVersion>", [Soap getBase64String: self.LastRowVersion]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[ViolationRequest class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}

@end
